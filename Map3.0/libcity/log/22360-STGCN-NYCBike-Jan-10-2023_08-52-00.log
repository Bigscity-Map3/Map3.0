2023-01-10 08:52:00,252 - INFO - Log directory: ./libcity/log
2023-01-10 08:52:00,254 - INFO - Begin pipeline, task=traffic_state_pred, model_name=STGCN, dataset_name=NYCBike, exp_id=22360
2023-01-10 08:52:00,254 - INFO - {'task': 'traffic_state_pred', 'model': 'STGCN', 'dataset': 'NYCBike', 'saved_model': True, 'train': True, 'seed': 0, 'dataset_class': 'TrafficStateGridDataset', 'executor': 'TrafficStateExecutor', 'evaluator': 'TrafficStateEvaluator', 'Ks': 3, 'Kt': 3, 'blocks': [[1, 32, 64], [64, 32, 128]], 'dropout': 0, 'graph_conv_type': 'chebconv', 'stgcn_train_mode': 'quick', 'bidir_adj_mx': True, 'scaler': 'standard', 'load_external': False, 'normal_external': False, 'ext_scaler': 'none', 'add_time_in_day': False, 'add_day_in_week': False, 'max_epoch': 100, 'learner': 'rmsprop', 'learning_rate': 0.001, 'lr_decay': True, 'lr_scheduler': 'steplr', 'lr_decay_ratio': 0.7, 'step_size': 5, 'clip_grad_norm': False, 'use_early_stop': False, 'batch_size': 64, 'cache_dataset': True, 'num_workers': 0, 'pad_with_last_sample': True, 'train_rate': 0.7, 'eval_rate': 0.1, 'input_window': 19, 'output_window': 1, 'use_row_column': True, 'gpu': True, 'gpu_id': 0, 'train_loss': 'none', 'epoch': 0, 'weight_decay': 0, 'lr_epsilon': 1e-08, 'lr_beta1': 0.9, 'lr_beta2': 0.999, 'lr_alpha': 0.99, 'lr_momentum': 0, 'steps': [5, 20, 40, 70], 'lr_T_max': 30, 'lr_eta_min': 0, 'lr_patience': 10, 'lr_threshold': 0.0001, 'max_grad_norm': 1.0, 'patience': 50, 'log_level': 'INFO', 'log_every': 1, 'load_best_epoch': True, 'hyper_tune': False, 'metrics': ['MAE', 'MAPE', 'MSE', 'RMSE', 'masked_MAE', 'masked_MAPE', 'masked_MSE', 'masked_RMSE', 'R2', 'EVAR'], 'evaluator_mode': 'single', 'save_mode': ['csv'], 'geo': {'including_types': ['Polygon'], 'Polygon': {'row_id': 'num', 'column_id': 'num'}}, 'grid': {'including_types': ['state'], 'state': {'row_id': 16, 'column_id': 8, 'new_flow': 'num', 'end_flow': 'num'}}, 'data_col': ['new_flow', 'end_flow'], 'data_files': ['NYCBIKE20140409'], 'geo_file': 'NYCBIKE20140409', 'output_dim': 2, 'time_intervals': 3600, 'init_weight_inf_or_zero': 'inf', 'set_weight_link_or_dist': 'dist', 'calculate_weight_adj': False, 'weight_adj_epsilon': 0.1, 'device': device(type='cuda', index=0), 'exp_id': 22360}
2023-01-10 08:52:00,264 - INFO - Loaded file NYCBIKE20140409.geo, num_grids=128, grid_size=(16, 8)
2023-01-10 08:52:00,265 - INFO - Generate grid rel file, shape=(128, 128)
2023-01-10 08:52:00,265 - INFO - Loading file NYCBIKE20140409.grid
2023-01-10 08:52:00,595 - INFO - Loaded file NYCBIKE20140409.grid, shape=(4392, 16, 8, 2)
2023-01-10 08:52:00,891 - INFO - Dataset created
2023-01-10 08:52:00,891 - INFO - x shape: (4373, 19, 16, 8, 2), y shape: (4373, 1, 16, 8, 2)
2023-01-10 08:52:00,892 - INFO - train	x: (3061, 19, 16, 8, 2), y: (3061, 1, 16, 8, 2)
2023-01-10 08:52:00,892 - INFO - eval	x: (437, 19, 16, 8, 2), y: (437, 1, 16, 8, 2)
2023-01-10 08:52:00,892 - INFO - test	x: (875, 19, 16, 8, 2), y: (875, 1, 16, 8, 2)
2023-01-10 08:52:06,055 - INFO - Saved at ./libcity/cache/dataset_cache/grid_based_NYCBike_19_1_0.7_0.1_standard_64_False_False_False_True_True.npz
2023-01-10 08:52:06,146 - INFO - StandardScaler mean: 9.23899494542977, std: 18.095629608758927
2023-01-10 08:52:06,146 - INFO - NoneScaler
2023-01-10 08:52:06,440 - INFO - You select quick mode to train STGCN model.
2023-01-10 08:52:06,555 - INFO - Chebyshev_polynomial_Lk shape: (3, 128, 128)
2023-01-10 08:52:11,364 - INFO - STGCN(
  (st_conv1): STConvBlock(
    (tconv1): TemporalConvLayer(
      (align): Align()
      (conv): Conv2d(2, 64, kernel_size=(3, 1), stride=(1, 1))
    )
    (sconv): SpatioConvLayer(
      (align): Align()
    )
    (tconv2): TemporalConvLayer(
      (align): Align()
      (conv): Conv2d(32, 64, kernel_size=(3, 1), stride=(1, 1))
    )
    (ln): LayerNorm((128, 64), eps=1e-05, elementwise_affine=True)
    (dropout): Dropout(p=0, inplace=False)
  )
  (st_conv2): STConvBlock(
    (tconv1): TemporalConvLayer(
      (align): Align(
        (conv1x1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1))
    )
    (sconv): SpatioConvLayer(
      (align): Align()
    )
    (tconv2): TemporalConvLayer(
      (align): Align()
      (conv): Conv2d(32, 128, kernel_size=(3, 1), stride=(1, 1))
    )
    (ln): LayerNorm((128, 128), eps=1e-05, elementwise_affine=True)
    (dropout): Dropout(p=0, inplace=False)
  )
  (output): OutputLayer(
    (tconv1): TemporalConvLayer(
      (align): Align()
      (conv): Conv2d(128, 256, kernel_size=(11, 1), stride=(1, 1))
    )
    (ln): LayerNorm((128, 128), eps=1e-05, elementwise_affine=True)
    (tconv2): TemporalConvLayer(
      (align): Align()
      (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    )
    (fc): FullyConvLayer(
      (conv): Conv2d(128, 2, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
2023-01-10 08:52:11,365 - INFO - st_conv1.tconv1.conv.weight	torch.Size([64, 2, 3, 1])	cuda:0	True
2023-01-10 08:52:11,365 - INFO - st_conv1.tconv1.conv.bias	torch.Size([64])	cuda:0	True
2023-01-10 08:52:11,365 - INFO - st_conv1.sconv.theta	torch.Size([32, 32, 3])	cuda:0	True
2023-01-10 08:52:11,365 - INFO - st_conv1.sconv.b	torch.Size([1, 32, 1, 1])	cuda:0	True
2023-01-10 08:52:11,365 - INFO - st_conv1.tconv2.conv.weight	torch.Size([64, 32, 3, 1])	cuda:0	True
2023-01-10 08:52:11,365 - INFO - st_conv1.tconv2.conv.bias	torch.Size([64])	cuda:0	True
2023-01-10 08:52:11,365 - INFO - st_conv1.ln.weight	torch.Size([128, 64])	cuda:0	True
2023-01-10 08:52:11,365 - INFO - st_conv1.ln.bias	torch.Size([128, 64])	cuda:0	True
2023-01-10 08:52:11,365 - INFO - st_conv2.tconv1.align.conv1x1.weight	torch.Size([32, 64, 1, 1])	cuda:0	True
2023-01-10 08:52:11,365 - INFO - st_conv2.tconv1.align.conv1x1.bias	torch.Size([32])	cuda:0	True
2023-01-10 08:52:11,365 - INFO - st_conv2.tconv1.conv.weight	torch.Size([64, 64, 3, 1])	cuda:0	True
2023-01-10 08:52:11,365 - INFO - st_conv2.tconv1.conv.bias	torch.Size([64])	cuda:0	True
2023-01-10 08:52:11,365 - INFO - st_conv2.sconv.theta	torch.Size([32, 32, 3])	cuda:0	True
2023-01-10 08:52:11,365 - INFO - st_conv2.sconv.b	torch.Size([1, 32, 1, 1])	cuda:0	True
2023-01-10 08:52:11,365 - INFO - st_conv2.tconv2.conv.weight	torch.Size([128, 32, 3, 1])	cuda:0	True
2023-01-10 08:52:11,365 - INFO - st_conv2.tconv2.conv.bias	torch.Size([128])	cuda:0	True
2023-01-10 08:52:11,365 - INFO - st_conv2.ln.weight	torch.Size([128, 128])	cuda:0	True
2023-01-10 08:52:11,366 - INFO - st_conv2.ln.bias	torch.Size([128, 128])	cuda:0	True
2023-01-10 08:52:11,366 - INFO - output.tconv1.conv.weight	torch.Size([256, 128, 11, 1])	cuda:0	True
2023-01-10 08:52:11,366 - INFO - output.tconv1.conv.bias	torch.Size([256])	cuda:0	True
2023-01-10 08:52:11,366 - INFO - output.ln.weight	torch.Size([128, 128])	cuda:0	True
2023-01-10 08:52:11,366 - INFO - output.ln.bias	torch.Size([128, 128])	cuda:0	True
2023-01-10 08:52:11,366 - INFO - output.tconv2.conv.weight	torch.Size([128, 128, 1, 1])	cuda:0	True
2023-01-10 08:52:11,366 - INFO - output.tconv2.conv.bias	torch.Size([128])	cuda:0	True
2023-01-10 08:52:11,366 - INFO - output.fc.conv.weight	torch.Size([2, 128, 1, 1])	cuda:0	True
2023-01-10 08:52:11,366 - INFO - output.fc.conv.bias	torch.Size([2])	cuda:0	True
2023-01-10 08:52:11,366 - INFO - Total parameter numbers: 499106
2023-01-10 08:52:11,366 - INFO - You select `rmsprop` optimizer.
2023-01-10 08:52:11,366 - INFO - You select `steplr` lr_scheduler.
2023-01-10 08:52:11,366 - WARNING - Received none train loss func and will use the loss func defined in the model.
2023-01-10 08:52:11,367 - INFO - Start training ...
2023-01-10 08:52:11,367 - INFO - num_batches:48
2023-01-10 08:52:12,683 - INFO - epoch complete!
2023-01-10 08:52:12,683 - INFO - 1.3158979415893555
2023-01-10 08:52:12,683 - INFO - evaluating now!
